# Your theme's name must begin with Plastic, e.g. Plastic Horses
name: Plastic

# Your theme must provide hex values for these 6 normal and 6 bright colours.
# The terminal colours they are associated with is shown next to them. The
# colour you set does not necessarily need to match the terminal name, they are
# your available palette for your syntax colours. Do not add, remove, or rename
# the palette names. I highly recommend the Color Highlight plugin that will
# make it easier to see which colours your palette is using.
palette:
  one: '#61AFEF' # blue
  two: '#56B6C2' # cyan
  three: '#98C379' # green
  four: '#B57EDC' # magenta
  five: '#E06C75' # red
  six: '#D19A66' # yellow
  bright_one: '#007FFF' # bright blue
  bright_two: '#08E8DE' # bright cyan
  bright_three: '#66FF00' # bright green
  bright_four: '#8B00FF' # bright magenta
  bright_five: '#E34234' # bright red
  bright_six: '#E5C07B' # bright yellow

# This is where you define a colour to each group of syntax. Use the palette
# identifier from above.
syntax:
  functions: six # function names, and React props.
  keywords: five # import, export, return etc.
  primitives: two # numbers, booleans (not strings)
  storage: one # const, var, class etc. and React JSX component tag
  strings: three # anything in quotes
  tags: bright_six # html tags

# Plastic themes most of the workbench (everything that's not syntax) for you.
# However, there are a couple of flourishes you can add to top-off your
# theme nicely. As with syntax, use the palette identifier.
workbench:
  primary: five # buttons, activity-bar badge
  secondary: bright_one # borders, find highlight, bracket match etc.
  warning: bright_six # squiggly underlines, find match errors etc.
  error: bright_five # squiggly underlines, find match errors etc.

# And that's all there is to it. Run `yarn` and then `yarn build` and your new
# theme will be written to `out/theme.json`